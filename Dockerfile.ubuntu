FROM ubuntu:14.04
MAINTAINER DrTrigon <dr.trigon@surfeu.ch>

# LABEL author.user1="DrTrigon <dr.trigon@surfeu.ch>"

# Environment Variables
ENV ARDUINO_VERSION 1.8.2
ENV BOARD "arduino:avr:nano:cpu=atmega328"

# Initial update
RUN apt-get -y update

# Basic packages
RUN apt-get install -y \
  git

# wget
RUN apt-get install -y wget

# xz (for tar)
RUN apt-get install -y xz-utils

# binutils (for readelf)
RUN apt-get install -y binutils

# tree
RUN apt-get install -y tree

# Install Arduino IDE
RUN wget http://downloads.arduino.cc/arduino-$ARDUINO_VERSION-linux64.tar.xz
RUN tar xf arduino-$ARDUINO_VERSION-linux64.tar.xz
RUN sudo mv arduino-$ARDUINO_VERSION /usr/local/share/arduino
RUN sudo ln -s /usr/local/share/arduino/arduino /usr/local/bin/arduino

### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### ### 

# add your code here or use this docker in your own Dockerfile FROM ...:...
# e.g. use it to verify arduino code, generate elf+hex files,
# upload code by using USB hardware bridge/forward (all os?)

# see example at http...

### END docker-arduino / START individual dockers resp. testing of docker-arduino ###

# Clone repository
RUN git clone https://github.com/drtrigon/sketchbook.git

## Setup a pseudo-display/window manager
#RUN "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16"
#RUN sleep 3
#RUN export DISPLAY=:1.0

# Run Arduino verify
RUN arduino --verify --board $BOARD --verbose --preserve-temp-files $PWD/sketchbook/MultiWii_2_4/MultiWii/MultiWii.ino

# Output post-verify info
RUN export ELF_FILE=`find /tmp/ -name "MultiWii.ino.elf"`; readelf -a $ELF_FILE
RUN export ELF_FILE=`find /tmp/ -name "MultiWii.ino.elf"`; strings -d $ELF_FILE
RUN export ELF_FILE=`find /tmp/ -name "MultiWii.ino.elf"`; size $ELF_FILE
RUN tree
